#this is dataframe format

import pandas as pd

#Sample Portfolio for Risk Management Manuscript
#dataframe format


sec_data = {'secNames':["5yr UST",
                        "10yr UST",
                        "5yr Bond Opt",
                        "10yr Swap",
                        "5yr UKG",
                        "10yr UKG",
                        "CAC Index Futures",
                        "FTE CDS",
                        "5yr Bund",
                        "10yr Bund",
                        "FTE Equity",
                        "GBPCash",
                        "EURCash",
                        "Swap201901",
                        "SPX Index Futures"], 'secType': ["GovtBond",
"GovtBond",
"BondOption",
"Swap",
"GovtBond",
"GovtBond",
"Futures",
"CDS",
"GovtBond",
"GovtBond",
"Equity",
"Cash",
"Cash",
"SwapActual",
"Futures"],'secParmNames' : [
    ["Coupon", "MaturityDate", "Frequency", "Currency"],
    ["Coupon", "MaturityDate", "Frequency", "Currency"],
    ["Expiry", "StrikeYld", "UnderTerm", "UnderFreq", "Type", "Currency"],
    ["Coupon", "Years", "Frequency", "Currency"],
    ["Coupon", "MaturityDate", "Frequency", "Currency"],
    ["Coupon", "MaturityDate", "Frequency", "Currency"],
    ["betaIndex", "Currency"],
    ["Coupon", "Years", "Frequency", "Currency"],
    ["Coupon", "MaturityDate", "Frequency", "Currency"],
    ["Coupon", "MaturityDate", "Frequency", "Currency"],
    ["betaIndex", "betaSpec", "Currency"],
    ["Currency"],
    ["Currency"],
    ["Coupon", "MaturityDate", "Frequency", "FloatReset", "Currency"],
    ["betaIndex", "Currency"]],'secParmValues':[
      [3.75, [2013, 11, 15, 0, 0, 0], 2, "USD"],
      [3.75, [2018, 11, 15, 0, 0, 0], 2, "USD"],
      [0.5, 0.0168, 5, 2, "C", "USD"],
      [2.80, 10, 2, "USD"],
      [5, [2014, 9, 15, 0, 0, 0], 2, "GBP"],
      [5, [2018, 3, 15, 0, 0, 0], 2, "GBP"],
      [1, "EUR"],
      [1.50, 5, 2, "GBP"],
      [4, [2013, 10, 15, 0, 0, 0], 2, "EUR"],
      [3.75, [2019, 7, 15, 0, 0, 0], 2, "EUR"],
      [0.7, 1, "EUR"],
      ["GBP"],
      ["EUR"],
      [2.80, [2019, 1, 15, 0, 0, 0], 2, 2.30, "USD"],
      [1, "USD"]
    ],'secMktInputNames' : [
        ["USDYld5yr", "USDFX"],
        ["USDYld10yr", "USDFX"],
        ["RShort", "USDYld5yr", "US5yrOptionVol", "USDFX"],
        ["USDYld10yr", "USDSwapSp10yr", "USDFX"],
        ["GBPYld5yr", "GBPFX"],
        ["GBPYld10yr", "GBPFX"],
        ["CACEqIndex"],
        ["GBPYld5yr", "GBPCredSprd5yr", "GBPFX"],
        ["EURYld5yr", "EURFX"],
        ["EURYld10yr", "EURFX"],
        ["CACEqIndex", "FTEEqSpecific", "EURFX"],
        ["GBPFX"],
        ["EURFX"],
        ["USDYld10yr", "USDSwapSp10yr", "USDFX"],
        ["SPXEqIndex"]],'secRiskFactorNames' : [
          ["USDYld5yr"],
          ["USDYld10yr"],
          ["USDYld5yr", "US5yrOptionVol"],
          ["USDYld10yr", "USDSwapSp10yr"],
          ["GBPYld5yr", "GBPFX"],
          ["GBPYld10yr", "GBPFX"],
          ["CACEqIndex"],
          ["GBPYld5yr", "GBPCredSprd5yr", "GBPFX"],
          ["EURYld5yr", "EURFX"],
          ["EURYld10yr", "EURFX"],
          ["CACEqIndex", "FTEEqSpecific", "EURFX"],
          ["GBPFX"],
          ["EURFX"],
          ["USDYld10yr", "USDSwapSp10yr"],
          ["SPXEqIndex"]
        ],'secPVFunction' : [
   'bondpv',
   'bondpv',
   'bondoptionpv', 
   'swappv',
   'bondpv',
   'bondpv',
   'eqtyFutpv',
   'simpCDSpv',
   'bondpv',
   'bondpv',
   'eqtypv',
   'cashpv',
   'cashpv',
   'swappvactual',
   'eqtyFutpv'
           ], 'InputsName' : [
    ['yld','FX rate'],
    ['yld','FX rate'],
    ['rshort' ,'Forward yield' ,'Volatility','FX rate'],
    ['yeild','spread','FX rate'],
    ['yld','FX rate'],
    ['yld','FX rate'],
    ['Index Level', 'FX rate'],
    ['risk-free rate','market spread','FX rate'],
    ['yld','FX rate'],
    ['yld','FX rate'],
    ['Index Level', 'FX rate'],
    ['FX rate'],
    ['FX rate'],
    ['yeild','spread','FX rate'],
    ['Index Level', 'FX rate']],'InputsValue' : [
        [0.0158,1],
        [0.0258,1],
        [0.02, 0.05, 0.2,1],
        [0.0258,0.01,1],
        [0.0158,1.4],
        [0.0258,1.4],
        [7000, 1.11],
        [0.0258,0.01,1/1.3],
        [0.0158,1.11],
        [0.0158,1.11],
        [1, 1/1.3],
        [1.4],
        [1.11],
        [0.0258,0.01,1],
        [4000, 1]],'SecHolding': [
            [1],
            [1],
            [1],
            [1],
            [1],
            [1],
            [1],
            [1],
            [1],
            [1],
            [1],
            [1],
            [1],
            [1],
            [1]]
    }        
            
df_sec = pd.DataFrame(sec_data,index = sec_data["secNames"])
df_sec
df_sec.head()

security = '5yr UST'
parms = df_sec.loc[security]['secParmValues']
yld = df_sec.loc[security]['InputsValue'][0] 
holding = df_sec.loc[security]['SecHolding'][0] 



risk_data ={'riskFactorNames' :[
"USDYld5yr",
"USDYld10yr",
"US5yrOptionVol",
"USDSwapSp5yr",
"USDSwapSp10yr",
"SPXEqIndex",
"USDVol",
"GBPYld5yr",
"GBPYld10yr",
"GBPCredSprd5yr",
"GBPEqIndex",
"GBPFX",
"EURYld5yr",
"EURYld10yr",
"CACEqIndex",
"FTEEqSpecific",
"EURFX"
],'riskFactorCategory' :[
"FI - rates",
"FI - rates",
"Volatility",
"FI - swap spreads",
"FI - swap spreads",
"Equity",
"Volatility",
"FI - rates",
"FI - rates",
"Credit",
"Equity",
"FX",
"FI - rates",
"FI - rates",
"Equity",
"Equity",
"FX"
],'riskFactorEqvs' : [
"5yr UST",
"10yr UST",
"",
"5yr Swap",
"10yr Swap",
"SPX Index Futures",
"",
"5yr UKG",
"10yr UKG",
"FTE CDS",
"UKX Equity Index",
"GBPCash",
"5yr Bund",
"10yr Bund",
"CAC Index Futures",
"FTE Equity",
"EURCash"
],'riskFactorBumpSize' : [
.0005,
.0005,
.001,
.0005,
.0005,
.01,
.0005,
.001,
.0005,
.0005,
.01,
.01,
.0005,
.0005,
.01,
.01,
.01
],'riskFactorBumpTypes' : [
"level",
"level",
"level",
"level",
"level",
"percent",
"level",
"level",
"level",
"level",
"percent",
"percent",
"level",
"level",
"percent",
"percent",
"percent"
],'riskFactorBumpUnit' : [
-.0001,
-.0001,
.01,
-.0001,
-.0001,
1,
.01,
-.0001,
-.0001,
-.0001,
1,
-1,
-.0001,
-.0001,
1,
1,
-1
],'riskFactorMult' : [
.01,
.01,
1,
.01,
.01,
1,
1,
.01,
.01,
.01,
1,
1,
.01,
.01,
1,
1,
1
]}

df_rf = pd.DataFrame(risk_data,index = risk_data["riskFactorNames"])
df_rf

market_data={'marketDataNames' : [
"USDYld5yr",
"USDYld10yr",
"USDSwapSp5yr",
"USDSwapSp10yr",
"SPXEqIndex",
"USDFX",
"US5yrOptionVol",
"RShort",
"GBPYld5yr",
"GBPYld10yr",
"GBPCredSprd5yr",
"GBPEqIndex",
"GBPFX",
"EURYld5yr",
"EURYld10yr",
"CACEqIndex",
"FTEEqSpecific",
"EURFX"
],
'marketDataValues' : [
.0178,
.0253,
.0060,
.0027,
1,
1,
.2,
.005,
.0314,
.0367,
.0159,
1,
1/1.4,
.0220,
.0297,
1,
1,
1/1.3
]}
df_market = pd.DataFrame(market_data,index = market_data["marketDataNames"])
df_market

#pd.array
import numpy as np
corrmatrix = np.matrix([[1, 0.894463548, -0.046442049, 0.215806103, -0.397778621, 0, 0.343256562, 0, 0.626533382, 0.655431691, -0.059651541, -0.312714946, 0.121469905, 0.65948846, 0.71256132, -0.26649492, 0.129181583, -0.034390337], [0.894463548, 1, 0.14463409, 0.184982773, -0.320444678, 0, 0.265668751, 0, 0.623585779, 0.736716907, -0.053400865, -0.275690141, 0.07932111, 0.641136207, 0.793129921, -0.240000046, 0.123690934, -0.080855547], [-0.046442049, 0.14463409, 1, 0.626543888, 0.246648623, 0, -0.299240428, 0, -0.11916476, -0.037710308, 0.004344537, 0.218729622, -0.210396218, -0.057926929, -0.047641079, 0.055636246, 0.101272798, -0.160910017], [0.215806103, 0.184982773, 0.626543888, 1, -0.104031544, 0, 0.039751003, 0, -0.023657403, 0.005908368, 0.104757727, -0.09149073, 0.029682413, 0.072757103, 0.037720673, -0.1372426, 0.104601481, 0.140121204], [-0.397778621, -0.320444678, 0.246648623, -0.104031544, 1, 0, -0.794404549, 0, -0.349803599, -0.319338369, -0.131978371, 0.892341131, -0.359591444, -0.411833485, -0.391498194, 0.608771915, -0.153404398, -0.345395088], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.343256562, 0.265668751, -0.299240428, 0.039751003, -0.794404549, 0, 1, 0, 0.226776215, 0.217550865, 0.100327889, -0.778156708, 0.27033281, 0.317698524, 0.317910894, -0.492969891, 0.131788329, 0.24907896], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0.626533382, 0.623585779, -0.11916476, -0.023657403, -0.349803599, 0, 0.226776215, 0, 1, 0.869867185, -0.195092662, -0.274880434, 0.300188108, 0.724460792, 0.743115694, -0.182727578, 0.013357649, 0.066532588], [0.655431691, 0.736716907, -0.037710308, 0.005908368, -0.319338369, 0, 0.217550865, 0, 0.869867185, 1, -0.059075318, -0.283556745, 0.202075747, 0.720488508, 0.831000084, -0.190031077, 0.038113338, 0.039683491], [-0.059651541, -0.053400865, 0.004344537, 0.104757727, -0.131978371, 0, 0.100327889, 0, -0.195092662, -0.059075318, 1, -0.163437316, -0.075315907, 0.011321447, 0.031073451, -0.209829821, -0.318983049, 0.112362036], [-0.312714946, -0.275690141, 0.218729622, -0.09149073, 0.892341131, 0, -0.778156708, 0, -0.274880434, -0.283556745, -0.163437316, 1, -0.326947659, -0.343931629, -0.347042167, 0.669830912, -0.181410241, -0.313681699], [0.121469905, 0.07932111, -0.210396218, 0.029682413, -0.359591444, 0, 0.27033281, 0, 0.300188108, 0.202075747, -0.075315907, -0.326947659, 1, 0.281368999, 0.204330148, -0.259235668, 0.095974521, 0.58828034], [0.65948846, 0.641136207, -0.057926929, 0.072757103, -0.411833485, 0, 0.317698524, 0, 0.724460792, 0.720488508, 0.011321447, -0.343931629, 0.281368999, 1, 0.869155366, -0.267960434, 0.11248309, 0.283408807], [0.71256132, 0.793129921, -0.047641079, 0.037720673, -0.391498194, 0, 0.317910894, 0, 0.743115694, 0.831000084, 0.031073451, -0.347042167, 0.204330148, 0.869155366, 1, -0.283584095, 0.101671827, 0.173593297], [-0.26649492, -0.240000046, 0.055636246, -0.1372426, 0.608771915, 0, -0.492969891, 0, -0.182727578, -0.190031077, -0.209829821, 0.669830912, -0.259235668, -0.267960434, -0.283584095, 1, -0.517062776, -0.269158342], [0.129181583, 0.123690934, 0.101272798, 0.104601481, -0.153404398, 0, 0.131788329, 0, 0.013357649, 0.038113338, -0.318983049, -0.181410241, 0.095974521, 0.11248309, 0.101671827, -0.517062776, 1, 0.141113112], [-0.034390337, -0.080855547, -0.160910017, 0.140121204, -0.345395088, 0, 0.24907896, 0, 0.066532588, 0.039683491, 0.112362036, -0.313681699, 0.58828034, 0.283408807, 0.173593297, -0.269158342, 0.141113112, 1]])
marketVols = np.matrix([7.073478043, 7.148000008, 2.535396254, 2.235124477, 0.015460348, 0, 2.040043844, 0, 6.916175288, 6.569751878, 1.925656495, 0.015451441, 0.008110121, 6.141800667, 5.734588953, 0.025365051, 0.028395161, 0.007908532])





